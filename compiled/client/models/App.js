// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var dealer, deck, player;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      this.set('newGame', false);
      this.set('hands', 1);
      dealer = this.get('dealerHand');
      player = this.get('playerHand');
      player.on('bust', function() {
        dealer.at(0).flip();
        return this.set('newGame', true);
      }, this);
      player.on('playerStand', (function(_this) {
        return function() {
          dealer.dealerPlay();
          return _this.set('newGame', true);
        };
      })(this), this);
      return this.on('reset', (function(_this) {
        return function() {
          _this.set('deck', deck = new Deck());
          _this.set('playerHand', deck.dealPlayer());
          _this.set('dealerHand', deck.dealDealer());
          _this.set('newGame', false);
          _this.set('hands', _this.get('hands') + 1);
          dealer = _this.get('dealerHand');
          player = _this.get('playerHand');
          player.on('bust', function() {
            dealer.at(0).flip();
            return this.set('newGame', true);
          }, _this);
          return player.on('playerStand', function() {
            dealer.dealerPlay();
            return this.set('newGame', true);
          }, _this);
        };
      })(this));
    };

    return App;

  })(Backbone.Model);

}).call(this);
